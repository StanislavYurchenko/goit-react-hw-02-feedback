{"version":3,"sources":["js/Statistics.js","js/FeedbackOptions.js","js/Section.js","js/Notification.js","js/Feedback.js","js/Layout.js","js/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","defaultProps","FeedbackOptions","options","onLeaveFeedback","name","onClick","type","Section","title","children","message","INITIAL_STATE","Feedback","state","countTotalFeedback","Object","values","reduce","acc","el","countPositiveFeedbackPercentage","Math","round","clickHandler","event","target","setState","this","Notification","Component","Container","styled","div","Layout","App","ReactDOM","render","document","getElementById"],"mappings":"yQAOA,SAASA,EAAT,GAAsE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC9C,OACE,6BACE,sCAAaJ,GACb,yCAAgBC,GAChB,qCAAYC,GACZ,uCAAcC,GACd,mDAAyBC,EAAzB,MAKNL,EAAWM,aAAe,CACxBL,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAWPL,Q,QC3Bf,SAASO,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAAmB,cAEtBD,EAFsB,GAE7CP,EAF6C,KAEvCC,EAFuC,KAE9BC,EAF8B,KAIrD,OACE,6BACE,4BAAQO,KAAOT,EAAOU,QAAUF,EAAkBG,KAAK,UAAWX,GAClE,4BAAQS,KAAOR,EAAUS,QAAUF,EAAkBG,KAAK,UAAWV,GACrE,4BAAQQ,KAAOP,EAAMQ,QAAUF,EAAkBG,KAAK,UAAWT,IAKvEI,EAAgBD,aAAe,CAC7BE,QAAS,CAAC,OAAQ,UAAW,QAQhBD,QCvBf,SAASM,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACvB,OACE,6BACE,4BAAMD,GACJC,GAKRF,EAAQP,aAAe,CACrBQ,MAAO,IAUMD,QCpBf,SAASb,EAAT,GAAgC,IAAXgB,EAAU,EAAVA,QACnB,OACE,6BAAOA,GAIXhB,EAAWM,aAAe,CAC1BU,QAAS,IAOMhB,QCbTiB,EAAgB,CACpBhB,KAAM,EACNC,QAAS,EACTC,IAAK,GAIDe,E,4MAGJC,M,eAAaF,G,EAEbG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAIC,GAAL,OAAYD,EAAOC,M,EAE7DC,gCAAkC,WAChC,OAAOC,KAAKC,MAAM,IAAM,EAAKT,MAAMlB,KAAO,EAAKmB,uB,EAGjDS,aAAe,SAAAC,GAAU,IACfpB,EAASoB,EAAMC,OAAfrB,KACR,EAAKsB,UAAS,SAAAb,GAAK,sBAAQT,EAAOS,EAAMT,GAAQ,O,uDAGxC,IAAD,EACwBuB,KAAKd,MAA5BlB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ6B,KAAKb,qBACbf,EAAqB4B,KAAKP,kCAEhC,OACE,6BACE,kBAAC,EAAD,CAASZ,MAAM,yBACb,kBAAC,EAAD,CACEN,QAAW,CAAC,OAAQ,UAAW,OAC/BC,gBAAkBwB,KAAKJ,gBAI3B,kBAAC,EAAD,CAASf,MAAM,cAEXV,EACI,kBAAC,EAAD,CACEH,KAAOA,EACPC,QAAUA,EACVC,IAAMA,EACNC,MAAQA,EACRC,mBAAqBA,IAEvB,kBAAC6B,EAAD,CAAclB,QAAQ,4B,GAzCfmB,aAAjBjB,EACGZ,aAAe,GAgDTY,Q,mKC7Df,IAAMkB,E,KAAYC,EAAOC,IAAV,KAaAC,MANf,YAA+B,IAAbxB,EAAY,EAAZA,SAChB,OACE,kBAACqB,EAAD,KAAYrB,ICGDyB,EARH,kBACV,kBAAC,EAAD,KAGE,kBAAC,EAAD,QCNJC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.c745ec4e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nfunction Statistics({good, neutral, bad, total, positivePercentage}) {\r\n  return (\r\n    <div>\r\n      <div>Good: { good }</div>\r\n      <div>Neutral: { neutral }</div>\r\n      <div>Bad: { bad }</div>\r\n      <div>Total: { total }</div>\r\n      <div>Positive feedback: {positivePercentage}%</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n\r\n  const [ good, neutral, bad ] = options;\r\n\r\n  return (\r\n    <div>\r\n      <button name={ good } onClick={ onLeaveFeedback } type='button'>{ good }</button>\r\n      <button name={ neutral } onClick={ onLeaveFeedback } type='button'>{ neutral }</button>\r\n      <button name={ bad } onClick={ onLeaveFeedback } type='button'>{ bad }</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nFeedbackOptions.defaultProps = {\r\n  options: ['good', 'neutral', 'bad'],\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions;","import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nfunction Section({title, children}) {\r\n  return (\r\n    <div>\r\n      <h3>{ title }</h3>\r\n      { children } \r\n    </div>\r\n  );\r\n}\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children:PropTypes.node,\r\n}\r\n\r\n\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nfunction Statistics({message}) {\r\n  return (\r\n    <div>{ message }</div>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\nmessage: '',\r\n}\r\n\r\nStatistics.propTypes = {\r\n  message: PropTypes.string,\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\n// import styled, { css } from 'styled-components';\r\nimport Statistics from './Statistics.js';\r\nimport FeedbackOptions from './FeedbackOptions.js';\r\nimport Section from './Section.js';\r\nimport Notification from './Notification.js';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n}\r\n\r\n\r\nclass Feedback extends Component {\r\n  static defaultProps = {};\r\n\r\n  state = { ...INITIAL_STATE };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc,el) => acc += el);\r\n  }\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.round(100 * this.state.good / this.countTotalFeedback());\r\n  }\r\n\r\n  clickHandler = event => {   \r\n    const { name } = event.target;\r\n    this.setState(state => ({ [name]: state[name] + 1 }));\r\n  }\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options= { [\"good\", \"neutral\", \"bad\"] } \r\n            onLeaveFeedback={ this.clickHandler }\r\n          />\r\n        </Section>\r\n \r\n        <Section title=\"Statistics\">\r\n          {\r\n            total\r\n              ? <Statistics\r\n                  good={ good }\r\n                  neutral={ neutral }\r\n                  bad={ bad }\r\n                  total={ total }\r\n                  positivePercentage={ positivePercentage }\r\n                />\r\n              : <Notification message=\"No feedback given\"/>\r\n          }    \r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  width: 200px;\r\n  padding: 15px;\r\n  background-color: #f7f8ff;\r\n`;\r\n\r\nfunction Layout({ children }) {\r\n  return (\r\n    <Container>{children}</Container>        \r\n  );\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\n// import Increment from './Incriment.js'\n// import SignUpForm from './SignUpForm.js'\nimport Feedback from './Feedback.js'\nimport Layout from './Layout.js'\n\n\nconst App = () => (\n  <Layout>\n    {/* <Increment step={2} initialValue={100} /> */}\n    {/* <SignUpForm /> */}\n    <Feedback />\n  </Layout>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/App';\n\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n\n"],"sourceRoot":""}